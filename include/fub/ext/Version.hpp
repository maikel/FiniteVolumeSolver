// Copyright (c) 2021 Christian Zenker
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

/// \file
/// \brief This file declares variables are autogenerated and compiled into the
/// library by the version.cmake script.

#ifndef FUB_EXT_VERSION_HPP
#define FUB_EXT_VERSION_HPP

#include "fub/ext/Log.hpp"

#include <fmt/format.h>

namespace fub::git {

// These variables are autogenerated and compiled
// into the library by the version.cmake script
extern "C" {
extern const char* GIT_TAG;    //< git tag (if any)
extern const char* GIT_REV;    //< short git commit hash
extern const char* GIT_BRANCH; //< name of the git branch
}
const char* const COMPILED = __DATE__ " @ " __TIME__;

/// \brief Returns the git tag if there is any.
const char* libfive_git_version(void);

/// \brief Returns the git short commit hash, with a trailing + if there are
/// uncommitted changes.
const char* libfive_git_revision(void);

/// \brief Returns the git used git branch.
const char* libfive_git_branch(void);

/// \brief simple Print function for the options
///
/// \param log the logger for the output
template <typename Log> void PrintProgrammVersion(Log& log) {
  BOOST_LOG(log) << "==========================================";
  BOOST_LOG(log) << "Git Version Parameters: ";
  BOOST_LOG(log) << fmt::format(" - Tag = {}", libfive_git_version());
  BOOST_LOG(log) << fmt::format(" - Revision = {}", libfive_git_revision());
  BOOST_LOG(log) << fmt::format(" - Branch = {}", libfive_git_branch());
  BOOST_LOG(log) << fmt::format(" - Compiled = {}", COMPILED);
  BOOST_LOG(log) << "==========================================";
}
} // namespace fub::git

#endif // FUB_EXT_VERSION_HPP
