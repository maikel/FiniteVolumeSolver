name: Build on Ubuntu 22.04

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    container: ubuntu:22.04

    steps:
    - uses: actions/checkout@v3

    - name: Install packages via aptitude
      run: apt-get update && apt-get upgrade -y && apt-get install -y python3 python3-pip libopenmpi-dev cmake g++

    - name: Install conan via pip
      run: pip3 install conan

    - name: Configure conan
      run: conan profile new --detect default && conan profile update settings.compiler.libcxx=libstdc++11 default

    - name: Create conan packages
      run: conan create ${{github.workspace}}/conan/conan-hdf5 HDF5/1.10@local/stable
      run: conan create ${{github.workspace}}/conan/conan-amrex AMReX/development@local/stable
      run: conan create ${{github.workspace}}/conan/conan-vc Vc/1.4.3@local/stable
      run: conan create ${{github.workspace}}/conan/conan-fmt fmt/9.0.0@local/stable

    - name: Configure CMake
      run: conan install ${{github.workspace}} -s AMReX:build_type=${{env.BUILD_TYPE}} -o AMReX:dim=2 -o AMReX:omp=False --build missing --install-folder /build
      run: cmake ${{github.workspace}} -B /build -D CMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build /build --config ${{env.BUILD_TYPE}}

    # - name: Test
    #   working-directory: ${{github.workspace}}/build
    #   run: ctest -C ${{env.BUILD_TYPE}}

