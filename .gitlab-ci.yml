variables:
  IMP_REGISTRY: git.imp.fu-berlin.de:5000
  DOCKER_DRIVER: overlay2

stages:
  - build
  - install_conan_packages

.build_gcc_image: &build_gcc_image
  stage: build
  image: docker:git
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - apk add bash
    - cd docker/
    - >
      for AMREX_SPACEDIM in 2 3; do
        printf "[Build] Docker Image for ${COMPILER_ID} with Dimension ${AMREX_SPACEDIM}\n"
        GCC_VERSION=$(echo "${COMPILER_ID}" | sed 's/[^[0-9]*//g')
        case "${GCC_VERSION}" in
          7)
            UBUNTU_VERSION="18.04"
            ;;
          8)
            UBUNTU_VERSION="18.10"
            ;;
          9)
            UBUNTU_VERSION="19.10"
            ;;
        esac
        docker build \
          -t "git.imp.fu-berlin.de:5000/ag-klein/finitevolumesolver/amrex:${AMREX_SPACEDIM}d_${COMPILER_ID}" \
          --build-arg UBUNTU_VERSION="${UBUNTU_VERSION}" \
          --build-arg GCC_VERSION="${GCC_VERSION}" \
          --build-arg AMREX_SPACEDIM="${AMREX_SPACEDIM}" \
          --build-arg CACHEBUST="$(date +%s)" \
          --build-arg CI_JOB_TOKEN="${CI_JOB_TOKEN}" \
          -f amrex-gcc_base_image .

        printf "[Push] Docker Image for ${COMPILER_ID} with Dimension ${AMREX_SPACEDIM}\n"
        export DOCKER_API_VERSION=1.39
        docker push "git.imp.fu-berlin.de:5000/ag-klein/finitevolumesolver/amrex:${AMREX_SPACEDIM}d_${COMPILER_ID}"
      done

.build_clang_image: &build_clang_image
  stage: build
  image: docker:git
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - apk add bash
    - cd docker/
    - >
      for AMREX_SPACEDIM in 2 3; do
        printf "[Build] Docker Image for ${COMPILER_ID} with Dimension ${AMREX_SPACEDIM}\n"
        case "${COMPILER_ID}" in
        clang7)
          CLANG_URL="https://releases.llvm.org/7.0.1/clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-18.04.tar.xz"
          CLANG_VERSION=7.0
          ;;
        clang8)
          CLANG_URL="https://releases.llvm.org/8.0.0/clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz"
          CLANG_VERSION="8"
          ;;
        esac
        docker build \
          -t "git.imp.fu-berlin.de:5000/ag-klein/finitevolumesolver/amrex:${AMREX_SPACEDIM}d_${COMPILER_ID}" \
          --build-arg CLANG_URL="${CLANG_URL}" \
          --build-arg CLANG_VERSION="${CLANG_VERSION}" \
          --build-arg AMREX_SPACEDIM="${AMREX_SPACEDIM}" \
          --build-arg CACHEBUST="$(date +%s)" \
          --build-arg CI_JOB_TOKEN="${CI_JOB_TOKEN}" \
          -f amrex-clang_base_image .

        printf "[Push] Docker Image for ${COMPILER_ID} with Dimension ${AMREX_SPACEDIM}\n"
        export DOCKER_API_VERSION=1.39
        docker push "git.imp.fu-berlin.de:5000/ag-klein/finitevolumesolver/amrex:${AMREX_SPACEDIM}d_${COMPILER_ID}"
      done


build_clang8:
  variables:
    COMPILER_ID: "clang8"
  <<: *build_clang_image

build_gcc9:
  variables:
    COMPILER_ID: "gcc9"
  <<: *build_gcc_image
